<?xml version="1.0" encoding="UTF-8"?>
<module name="vyatta-protocols-bgp-v1"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:vyatta-protocols-bgp-v1="urn:vyatta.com:mgmt:vyatta-protocols-bgp:1"
        xmlns:types="urn:vyatta.com:mgmt:vyatta-types:1"
        xmlns:protocols="urn:vyatta.com:mgmt:vyatta-protocols:1"
        xmlns:service="urn:vyatta.com:mgmt:vyatta-services:1"
        xmlns:service-snmp="urn:vyatta.com:mgmt:vyatta-service-snmp:1"
        xmlns:configd="urn:vyatta.com:mgmt:configd:1"
        xmlns:policy="urn:vyatta.com:mgmt:vyatta-policy:1"
        xmlns:policy-route="urn:vyatta.com:mgmt:vyatta-policy-route:1">
  <namespace uri="urn:vyatta.com:mgmt:vyatta-protocols-bgp:1"/>
  <prefix value="vyatta-protocols-bgp-v1"/>
  <import module="vyatta-types-v1">
    <prefix value="types"/>
  </import>
  <import module="vyatta-protocols-v1">
    <prefix value="protocols"/>
  </import>
  <import module="vyatta-services-v1">
    <prefix value="service"/>
  </import>
  <import module="vyatta-service-snmp-v1">
    <prefix value="service-snmp"/>
  </import>
  <import module="configd-v1">
    <prefix value="configd"/>
  </import>
  <import module="vyatta-policy-v1">
    <prefix value="policy"/>
  </import>
  <import module="vyatta-policy-route-v1">
    <prefix value="policy-route"/>
  </import>
  <organization>
    <text>Brocade Communications Systems, Inc.</text>
  </organization>
  <contact>
    <text>Brocade Communications Systems, Inc.
Postal: 130 Holger Way
San Jose, CA 95134
E-mail: support@Brocade.com
Web: www.brocade.com</text>
  </contact>
  <description>
    <text>Copyright (c) 2014-2016 by Brocade Communications Systems, Inc.
All rights reserved.

The YANG module package for vyatta-protocols-bgp-v1</text>
  </description>
  <revision date="2016-10-26">
    <description>
      <text>Support log option at neighbor level</text>
    </description>
  </revision>
  <revision date="2016-08-26">
    <description>
      <text>Added an end statement for maximum-prefix list</text>
    </description>
  </revision>
  <revision date="2016-07-20">
    <description>
      <text>Re-positioned Yang validation for global route-map exportAdded validation for neighbor without remote-as and AFIRemoved few validations under 'ttl-security' and 'warning-only' nodes to ensure backwards compatibilityRemoved validations for dampening parametersRemoved interface-validation Yang importAdding few more validations to support peer-group configurationsModified relative path to absolute path so that the paths are valid even in the imported Yang filesAdding more debug logs and grouping them as wellConfig validations using relative path</text>
    </description>
  </revision>
  <revision date="2015-09-23">
    <description>
      <text>Initial revision of version 1</text>
    </description>
  </revision>
  <grouping name="route-map-group">
    <leaf name="route-map">
      <description>
        <text>Route-map for filtering</text>
      </description>
      <configd:help text="Route-map for filtering"/>
      <type name="leafref">
        <path value="/policy:policy/policy-route:route/policy-route:route-map/policy-route:tagnode"/>
      </type>
    </leaf>
  </grouping>
  <grouping name="neighbor-route-map">
    <container name="route-map">
      <description>
        <text>Route-map to filter route updates to/from this entity (neighbor or peer-group)</text>
      </description>
      <configd:help text="Route-map to filter route updates to/from this entity (neighbor or peer-group)"/>
      <leaf name="export">
        <description>
          <text>Route-map to filter outgoing route updates to this peer-group</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:route-map/policy-route:tagnode"/>
        </type>
        <configd:help text="Route-map to filter outgoing route updates to this peer-group"/>
      </leaf>
      <leaf name="import">
        <description>
          <text>Route-map to filter incoming route updates from this entity (neighbor or peer-group)</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:route-map/policy-route:tagnode"/>
        </type>
        <configd:help text="Route-map to filter incoming route updates from this entity (neighbor or peer-group)"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="neighbor-vrrp-failover">
    <list name="interface">
      <description>
        <text>This list is added to link the BGP VRRP group with interface VRRP group</text>
      </description>
      <max-elements value="1"/>
      <configd:help text="VRRP Interface"/>
      <configd:allowed executable="/opt/vyatta/sbin/vyatta-interfaces.pl --show all"/>
      <key value="ifname"/>
      <leaf name="ifname">
        <description>
          <text>VRRP Interface Name</text>
        </description>
        <configd:help text="VRRP Interface Name"/>
        <type name="types:interface-ifname"/>
      </leaf>
      <container name="vrrp-failover">
        <description>
          <text>Configure VRRP Failover Action</text>
        </description>
        <presence value="VRRP Failover Action"/>
        <configd:help text="VRRP Failover"/>
        <list name="vrrp-group">
          <description>
            <text>VRRP Group to associate the neighbor with</text>
          </description>
          <max-elements value="1"/>
          <configd:help text="VRRP Group to associate the neighbor with"/>
          <configd:create executable="${vyatta_sbindir}/vyatta-async-notify-bgp.pl $VAR(@) $VAR(../../@)"/>
          <key value="groupid"/>
          <leaf name="groupid">
            <description>
              <text>VRRP Group ID</text>
            </description>
            <type name="uint8">
              <range value="1..max"/>
            </type>
            <configd:help text="VRRP Group ID"/>
          </leaf>
          <leaf name="prepend-as">
            <description>
              <text>Prepend AS Path for outbound routes while VRRP is backup</text>
            </description>
            <type name="string">
              <pattern value="[0-9]+( [0-9]+)*">
                <error-message>
                  <value>as-path should be string of numbers</value>
                </error-message>
              </pattern>
              <configd:syntax executable="/opt/vyatta/share/tmplscripts/protocols/bgp/peer-group/vrrp-failover/prepend-as/configd_syntax1.cli"/>
            </type>
            <must condition="not(../med) and not(../route-map)">
              <error-message>
                <value>You may set MED/prepend-as/route-map or none of them</value>
              </error-message>
            </must>
            <configd:help text="Prepend AS Path"/>
          </leaf>
          <leaf name="med">
            <description>
              <text>Set MED value for outbound routes while VRRP is backup</text>
            </description>
            <type name="uint32">
              <range value="1..4294967294"/>
            </type>
            <must condition="not(../prepend-as) and not(../route-map)">
              <error-message>
                <value>You may set MED/prepend-as/route-map or none of them</value>
              </error-message>
            </must>
            <configd:help text="Set MED value for outbound routes while VRRP is backup"/>
          </leaf>
          <uses name="route-map-group">
            <refine target-node="route-map">
              <description>
                <text>Route-map to modify route attributes while VRRP is backup</text>
              </description>
              <configd:help text="Route-map to modify route attributes"/>
            </refine>
          </uses>
        </list>
      </container>
    </list>
  </grouping>
  <grouping name="neighbor-med-out">
    <container name="med-out">
      <description>
        <text>Allow MED to be sent out</text>
      </description>
      <configd:help text="Allow MED to be sent out"/>
      <must condition="not(../address-family/*/peer-group)">
        <error-message>
          <value>You may not configure med-out for a neighbor in peer-group
</value>
        </error-message>
      </must>
      <container name="igp">
        <description>
          <text>Send MED based on IGP metric</text>
        </description>
        <presence value="Enables med-out IGP"/>
        <configd:help text="Send MED based on IGP metric"/>
        <leaf name="delay-updates">
          <description>
            <text>Delay updates of MED</text>
          </description>
          <type name="empty"/>
          <configd:help text="Delay updates of MED"/>
        </leaf>
      </container>
      <leaf name="minimum-igp">
        <description>
          <text>Send MED based on minimal IGP metric</text>
        </description>
        <type name="empty"/>
        <must condition="not(../igp)">
          <error-message>
            <value>You can't set both 'med-out igp' and 'med-out minimum-igp'</value>
          </error-message>
        </must>
        <configd:help text="Send MED based on minimal IGP metric"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="neighbor-cluster-id">
    <leaf name="cluster-id">
      <description>
        <text>Neighbor Cluster-id</text>
      </description>
      <configd:help text="Neighbor Cluster-id"/>
      <type name="union">
        <type name="types:ipv4-address"/>
        <type name="uint32">
          <range value="1..max"/>
          <configd:help text="Neighbor Cluster-id as 32-bit number"/>
        </type>
      </type>
      <must condition="(not(starts-with(current(), '127.')))">
        <error-message>
          <value>Invalid cluster-id (cannot configure a loopback address) </value>
        </error-message>
      </must>
      <must condition="(current() != '0.0.0.0')">
        <error-message>
          <value>Invalid cluster-id (value cannot be 0.0.0.0)</value>
        </error-message>
      </must>
      <must condition="not(../remote-as) or (../remote-as) = (../../tagnode)">
        <error-message>
          <value>Can not set both cluster-id and an eBGP remote-as</value>
        </error-message>
      </must>
      <must condition="not(../address-family/*/peer-group)">
        <error-message>
          <value>You may not configure cluster-id for a neighbor in peer-group
</value>
        </error-message>
      </must>
    </leaf>
  </grouping>
  <grouping name="ipv4-aggregate-address">
    <list name="aggregate-address">
      <description>
        <text>BGP aggregate network</text>
      </description>
      <configd:help text="BGP aggregate network"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>BGP aggregate network</text>
        </description>
        <type name="types:ipv4-prefix">
          <configd:normalize executable="normalize ipv4-prefix"/>
        </type>
        <configd:help text="BGP aggregate network"/>
      </leaf>
      <leaf name="as-set">
        <description>
          <text>Generate AS-set path information for this aggregate address</text>
        </description>
        <type name="empty"/>
        <configd:help text="Generate AS-set path information for this aggregate address"/>
      </leaf>
      <leaf name="summary-only">
        <description>
          <text>Announce the aggregate summary network only</text>
        </description>
        <type name="empty"/>
        <configd:help text="Announce the aggregate summary network only"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="ipv6-aggregate-address">
    <list name="aggregate-address">
      <description>
        <text>BGP aggregate network</text>
      </description>
      <configd:help text="BGP aggregate network"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>IPv6 address</text>
        </description>
        <type name="types:ipv6-prefix">
          <configd:normalize executable="normalize ipv6-prefix"/>
        </type>
        <configd:help text="BGP IPv6 aggregate network"/>
      </leaf>
      <leaf name="as-set">
        <description>
          <text>Generate AS-set path information for this aggregate address</text>
        </description>
        <type name="empty"/>
        <configd:help text="Generate AS-set path information for this aggregate address"/>
      </leaf>
      <leaf name="summary-only">
        <description>
          <text>Announce the aggregate summary network only</text>
        </description>
        <type name="empty"/>
        <configd:help text="Announce the aggregate summary network only"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="parameters-distance">
    <container name="distance">
      <description>
        <text>Administrative distance for BGP routes</text>
      </description>
      <presence value="Enables administrative distance for BGP routes"/>
      <configd:help text="Administrative distance for BGP routes"/>
      <container name="global">
        <description>
          <text>Global administrative distances for BGP routes</text>
        </description>
        <presence value="Enables global administrative distance for BGP"/>
        <configd:help text="Global administrative distances for BGP routes"/>
        <leaf name="local">
          <description>
            <text>Administrative distance for local BGP routes</text>
          </description>
          <type name="uint32">
            <range value="1..255"/>
          </type>
          <configd:help text="Administrative distance for local BGP routes"/>
          <default value="200"/>
        </leaf>
        <leaf name="internal">
          <description>
            <text>Administrative distance for internal BGP routes</text>
          </description>
          <type name="uint32">
            <range value="1..255"/>
          </type>
          <configd:help text="Administrative distance for internal BGP routes"/>
          <default value="200"/>
        </leaf>
        <leaf name="external">
          <description>
            <text>Administrative distance for external BGP routes</text>
          </description>
          <type name="uint32">
            <range value="1..255"/>
          </type>
          <configd:help text="Administrative distance for external BGP routes"/>
          <default value="20"/>
        </leaf>
      </container>
    </container>
  </grouping>
  <grouping name="parameters-dampening">
    <container name="dampening">
      <description>
        <text>Enable route-flap dampening</text>
      </description>
      <presence value="Enables route-flap dampening"/>
      <configd:help text="Enable route-flap dampening"/>
      <configd:validate executable="/opt/vyatta/share/tmplscripts/protocols/bgp/address-family/parameters/dampening/configd_validate.sh"/>
      <leaf name="re-use">
        <description>
          <text>Penalty value to start reusing a route [REQUIRED]</text>
        </description>
        <type name="uint32">
          <range value="1..20000"/>
        </type>
        <default value="750"/>
        <configd:help text="Penalty value to start reusing a route [REQUIRED]"/>
      </leaf>
      <leaf name="half-life">
        <description>
          <text>Half-life time for dampening [REQUIRED]</text>
        </description>
        <type name="uint32">
          <range value="1..45"/>
        </type>
        <default value="15"/>
        <units name="minutes"/>
        <configd:help text="Half-life time for dampening [REQUIRED]"/>
      </leaf>
      <leaf name="start-suppress">
        <description>
          <text>Penalty value to start suppressing a route [REQUIRED]</text>
        </description>
        <type name="uint32">
          <range value="1..20000"/>
        </type>
        <default value="2000"/>
        <configd:help text="Penalty value to start suppressing a route [REQUIRED]"/>
      </leaf>
      <leaf name="max-suppress-time">
        <description>
          <text>Maximum duration to suppress a stable route [REQUIRED]</text>
        </description>
        <type name="uint32">
          <range value="1..255"/>
        </type>
        <default value="60"/>
        <units name="minutes"/>
        <configd:help text="Maximum duration to suppress a stable route [REQUIRED]"/>
      </leaf>
      <leaf name="un-reachability-half-life">
        <description>
          <text>Un-reachability half-life time for the penalty in minutes</text>
        </description>
        <type name="uint32">
          <range value="1..45"/>
        </type>
        <units name="minutes"/>
        <configd:help text="Un-reachability half-life time for the penalty in minutes"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="network-ipv4">
    <list name="network">
      <description>
        <text>BGP network</text>
      </description>
      <configd:help text="BGP network"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>BGP network</text>
        </description>
        <type name="types:ipv4-prefix">
          <configd:normalize executable="normalize ipv4-prefix"/>
        </type>
        <configd:help text="BGP network"/>
      </leaf>
      <leaf name="backdoor">
        <description>
          <text>Network as a backdoor route</text>
        </description>
        <type name="empty"/>
        <configd:help text="Network as a backdoor route"/>
      </leaf>
      <uses name="route-map-group">
        <refine target-node="route-map">
          <must condition="not(../backdoor)">
            <error-message>
              <value>You may configure route-map or backdoor, not both</value>
            </error-message>
          </must>
          <configd:help text="Route-map to modify route attributes"/>
        </refine>
      </uses>
    </list>
  </grouping>
  <grouping name="redistribute-ipv4">
    <container name="redistribute">
      <description>
        <text>Redistribute routes from other protocols into BGP</text>
      </description>
      <presence value="Enables IPv4 redistribution"/>
      <configd:help text="Redistribute routes from other protocols into BGP"/>
      <container name="kernel">
        <description>
          <text>Redistribute kernel routes into BGP</text>
        </description>
        <presence value="Enables redistribution of kernel routes into BGP"/>
        <configd:help text="Redistribute kernel routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="rip">
        <description>
          <text>Redistribute RIP routes into BGP</text>
        </description>
        <presence value="Enables redistribution of RIP routes into BGP"/>
        <configd:help text="Redistribute RIP routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="connected">
        <description>
          <text>Redistribute connected routes into BGP</text>
        </description>
        <presence value="Enables redistribution of connected routes into BGP"/>
        <configd:help text="Redistribute connected routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="static">
        <description>
          <text>Redistribute static routes into BGP</text>
        </description>
        <presence value="Enables redistribution of static routes into BGP"/>
        <configd:help text="Redistribute static routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="ospf">
        <description>
          <text>Redistribute OSPF routes into BGP</text>
        </description>
        <presence value="Enables redistribution of OSPF routes into BGP"/>
        <configd:help text="Redistribute OSPF routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
    </container>
  </grouping>
  <grouping name="network-ipv6">
    <list name="network">
      <description>
        <text>BGP IPv6 network</text>
      </description>
      <configd:help text="BGP IPv6 network"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>BGP IPv6 network</text>
        </description>
        <type name="types:ipv6-prefix">
          <configd:normalize executable="normalize ipv6-prefix"/>
        </type>
        <configd:help text="BGP IPv6 network"/>
      </leaf>
      <leaf name="backdoor">
        <description>
          <text>Network as a backdoor route</text>
        </description>
        <type name="empty"/>
        <configd:help text="Network as a backdoor route"/>
      </leaf>
      <uses name="route-map-group">
        <refine target-node="route-map">
          <must condition="not(../backdoor)">
            <error-message>
              <value>You may configure route-map or backdoor, not both!</value>
            </error-message>
          </must>
          <configd:help text="Route-map to modify route attributes"/>
        </refine>
      </uses>
    </list>
  </grouping>
  <grouping name="redistribute-ipv6">
    <container name="redistribute">
      <description>
        <text>Redistribute routes from other protocols into BGP</text>
      </description>
      <presence value="Enables IPv6 Redistribution"/>
      <configd:help text="Redistribute routes from other protocols into BGP"/>
      <container name="kernel">
        <description>
          <text>Redistribute kernel routes into BGP</text>
        </description>
        <presence value="Enables redistribution of kernel routes into BGP"/>
        <configd:help text="Redistribute kernel routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="ripng">
        <description>
          <text>Redistribute RIP routes into BGP</text>
        </description>
        <presence value="Enables redistribution of RIP routes into BGP"/>
        <configd:help text="Redistribute RIP routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="connected">
        <description>
          <text>Redistribute connected routes into BGP</text>
        </description>
        <presence value="Enables redistribution of connected routes into BGP"/>
        <configd:help text="Redistribute connected routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="static">
        <description>
          <text>Redistribute static routes into BGP</text>
        </description>
        <presence value="Enables redistribution of static routes into BGP"/>
        <configd:help text="Redistribute static routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
      <container name="ospfv3">
        <description>
          <text>Redistribute OSPF routes into BGP</text>
        </description>
        <presence value="Enables redistribution of OSPF routes into BGP"/>
        <configd:help text="Redistribute OSPF routes into BGP"/>
        <uses name="route-map-group">
          <refine target-node="route-map">
            <configd:help text="Route map to filter redistributed routes"/>
          </refine>
        </uses>
      </container>
    </container>
  </grouping>
  <grouping name="neigh_peer_grp_ipv4_lists">
    <container name="prefix-list">
      <description>
        <text>Prefix-list to filter route updates to/from this entity (neighbor or peer-group)</text>
      </description>
      <configd:help text="Prefix-list to filter route updates to/from this entity (neighbor or peer-group)"/>
      <leaf name="export">
        <description>
          <text>Prefix-list to filter outgoing route updates to this peer-group</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:prefix-list/policy-route:tagnode"/>
        </type>
        <configd:help text="Prefix-list to filter outgoing route updates to this peer-group"/>
        <must condition="not(../../peer-group)">
          <error-message>
            <value>You may not configure prefix-list export for a neighbor in peer-group
</value>
          </error-message>
        </must>
      </leaf>
      <leaf name="import">
        <description>
          <text>Prefix-list to filter incoming route updates from this peer-group</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:prefix-list/policy-route:tagnode"/>
        </type>
        <configd:help text="Prefix-list to filter incoming route updates from this peer-group"/>
      </leaf>
    </container>
    <container name="distribute-list">
      <description>
        <text>Access-list to filter route updates to/from this entity (peer-group or neighbor)</text>
      </description>
      <configd:help text="Access-list to filter route updates to/from this entity (peer-group or neighbor)"/>
      <must condition="not(../prefix-list)">
        <error-message>
          <value>You may not configure both prefix-list and distribute-list</value>
        </error-message>
      </must>
      <must condition="not(../peer-group)">
        <error-message>
          <value>You may not configure distribute-list for a neighbor in peer-group
</value>
        </error-message>
      </must>
      <leaf name="export">
        <description>
          <text>Access-list to filter outgoing route updates to this entity (peer-group or neighbor)</text>
        </description>
        <type name="uint32">
          <range value="1..65535"/>
        </type>
        <configd:help text="Access-list to filter outgoing route updates to this entity (peer-group or neighbor)"/>
        <configd:allowed executable="/opt/vyatta/share/tmplscripts/protocols/bgp/configd_allowed.sh distribute-list ipv4-unicast"/>
      </leaf>
      <leaf name="import">
        <description>
          <text>Access-list to filter incoming route updates from this entity (peer-group or neighbor)</text>
        </description>
        <type name="uint32">
          <range value="1..65535"/>
        </type>
        <configd:help text="Access-list to filter incoming route updates from this entity (peer-group or neighbor)"/>
        <configd:allowed executable="/opt/vyatta/share/tmplscripts/protocols/bgp/configd_allowed.sh distribute-list ipv4-unicast"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="neigh_peer_grp_ipv6_lists">
    <container name="prefix-list">
      <description>
        <text>Prefix-list to filter route updates to/from this entity (neighbor or peer-group)</text>
      </description>
      <presence value="Enables IPv6 prefix-list"/>
      <configd:help text="Prefix-list to filter route updates to/from this entity (neighbor or peer-group)"/>
      <leaf name="export">
        <description>
          <text>Prefix-list to filter outgoing route updates to this peer-group</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:prefix-list6/policy-route:tagnode"/>
        </type>
        <configd:help text="Prefix-list to filter outgoing route updates to this peer-group"/>
        <must condition="not(../../peer-group)">
          <error-message>
            <value>You may not configure prefix-list export for a neighbor in peer-group
</value>
          </error-message>
        </must>
      </leaf>
      <leaf name="import">
        <description>
          <text>Prefix-list to filter incoming route updates from this peer-group</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:prefix-list6/policy-route:tagnode"/>
        </type>
        <configd:help text="Prefix-list to filter incoming route updates from this peer-group"/>
      </leaf>
    </container>
    <container name="distribute-list">
      <description>
        <text>Access-list to filter route updates to/from this entity (peer-group or neighbor)</text>
      </description>
      <presence value="Enables IPv6 access-list"/>
      <configd:help text="Access-list to filter route updates to/from this entity (peer-group or neighbor)"/>
      <must condition="not(../prefix-list)">
        <error-message>
          <value>You may not configure both prefix-list and distribute-list</value>
        </error-message>
      </must>
      <must condition="not(../peer-group)">
        <error-message>
          <value>You may not configure distribute-list for a neighbor in peer-group
</value>
        </error-message>
      </must>
      <leaf name="export">
        <description>
          <text>Access-list to filter outgoing route updates to this entity (peer-group or neighbor)</text>
        </description>
        <type name="uint32">
          <range value="1..65535"/>
        </type>
        <configd:help text="Access-list to filter outgoing route updates to this entity (peer-group or neighbor)"/>
        <configd:allowed executable="/opt/vyatta/share/tmplscripts/protocols/bgp/configd_allowed.sh distribute-list ipv6-unicast"/>
      </leaf>
      <leaf name="import">
        <description>
          <text>Access-list to filter incoming route updates from this entity (peer-group or neighbor)</text>
        </description>
        <type name="uint32">
          <range value="1..65535"/>
        </type>
        <configd:help text="Access-list to filter incoming route updates from this entity (peer-group or neighbor)"/>
        <configd:allowed executable="/opt/vyatta/share/tmplscripts/protocols/bgp/configd_allowed.sh distribute-list ipv6-unicast"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-global-ext-asn-cap">
    <leaf name="extended-asn-capability">
      <description>
        <text>Enable Extended ASN Capability (4 octet ASN)</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable Extended ASN Capability (4 octet ASN)"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-no-rtm">
    <leaf name="no-rtm">
      <description>
        <text>Prevent the installation of BGP learned routes into rtm</text>
      </description>
      <type name="empty"/>
      <configd:help text="Prevent the installation of BGP learned routes into rtm"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-cluster-id">
    <leaf name="cluster-id">
      <description>
        <text>Route-reflector cluster-id</text>
      </description>
      <type name="types:ipv4-address"/>
      <must condition="(not(starts-with(current(), '127.')))">
        <error-message>
          <value>Invalid cluster-id (cannot configure a loopback address) </value>
        </error-message>
      </must>
      <must condition="(current() != '0.0.0.0')">
        <error-message>
          <value>Invalid cluster-id (value cannot be 0.0.0.0)</value>
        </error-message>
      </must>
      <configd:help text="Route-reflector cluster-id"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-always-compare-med">
    <leaf name="always-compare-med">
      <description>
        <text>Always compare MEDs from different neighbors</text>
      </description>
      <type name="empty"/>
      <configd:help text="Always compare MEDs from different neighbors"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-default">
    <container name="default">
      <description>
        <text>BGP defaults</text>
      </description>
      <presence value="Enables BGP defaults"/>
      <configd:help text="BGP defaults"/>
      <leaf name="local-pref">
        <description>
          <text>Default local preference (higher=more preferred)</text>
        </description>
        <type name="uint32"/>
        <configd:help text="Default local preference (higher=more preferred)"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-global-confederation-identifier">
    <leaf name="identifier">
      <description>
        <text>Confederation AS identifier</text>
      </description>
      <type name="uint32">
        <range value="1..max"/>
      </type>
      <configd:help text="Confederation AS identifier"/>
      <must condition="((current() &lt;=  65535) or (/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:extended-asn-capability))">
        <error-message>
          <value>Extended ASN Capability must be enabled for configuring ASN greater than 65535</value>
        </error-message>
      </must>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-confederation-peers">
    <leaf-list name="peers">
      <description>
        <text>Peer ASes in the BGP confederation</text>
      </description>
      <type name="uint32">
        <range value="1..max"/>
      </type>
      <ordered-by value="user"/>
      <configd:help text="Peer ASes in the BGP confederation"/>
      <must condition="((current() &lt;=  65535) or (/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:extended-asn-capability))">
        <error-message>
          <value>Extended ASN Capability must be enabled for configuring ASN greater than 65535</value>
        </error-message>
      </must>
      <must condition="(/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:confederation/vyatta-protocols-bgp-v1:identifier)">
        <error-message>
          <value>You must set the confederation identifier</value>
        </error-message>
      </must>
      <must condition="(current() != ../../../tagnode)">
        <error-message>
          <value>Cannot set confederation peer ASN to local ASN</value>
        </error-message>
      </must>
      <configd:validate executable="/opt/vyatta/share/tmplscripts/protocols/bgp/parameters/confederation/peers/configd_update.cli"/>
    </leaf-list>
  </grouping>
  <grouping name="bgp-params-global-confederation">
    <container name="confederation">
      <description>
        <text>AS confederation parameters</text>
      </description>
      <presence value="BGP Confederation config"/>
      <configd:help text="AS confederation parameters"/>
      <uses name="bgp-params-global-confederation-identifier"/>
      <uses name="bgp-params-global-confederation-peers"/>
    </container>
  </grouping>
  <grouping name="bgp-params-global-graceful-restart">
    <container name="graceful-restart">
      <description>
        <text>Graceful restart capability parameters</text>
      </description>
      <presence value="Enables BGP Graceful-restart"/>
      <configd:help text="Graceful restart capability parameters"/>
      <leaf name="graceful-reset">
        <description>
          <text>Enable graceful reset capability</text>
        </description>
        <type name="empty"/>
        <configd:help text="Enable graceful reset capability"/>
      </leaf>
      <leaf name="restart-time">
        <description>
          <text>Max time needed for Neighbor(s) to restart</text>
        </description>
        <type name="uint32">
          <range value="1..3600"/>
        </type>
        <default value="90"/>
        <configd:help text="Max time needed for Neighbor(s) to restart"/>
      </leaf>
      <leaf name="stalepath-time">
        <description>
          <text>Maximum time to hold onto restarting peer's stale paths</text>
        </description>
        <type name="uint32">
          <range value="1..3600"/>
        </type>
        <default value="360"/>
        <configd:help text="Maximum time to hold onto restarting peer's stale paths"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-global-bestpath">
    <container name="bestpath">
      <description>
        <text>Default bestpath selection mechanism</text>
      </description>
      <presence value="Enables bestpath selection mechanism"/>
      <configd:help text="Default bestpath selection mechanism"/>
      <container name="med">
        <description>
          <text>MED attribute comparison parameters</text>
        </description>
        <presence value="Enables MED attribute comparison"/>
        <configd:help text="MED attribute comparison parameters"/>
        <container name="confed">
          <description>
            <text>Compare MEDs among confederation paths</text>
          </description>
          <presence value="Compare MEDs among confederation paths"/>
          <configd:help text="Compare MEDs among confederation paths"/>
          <leaf name="missing-as-worst">
            <description>
              <text>Treat missing route as a MED as the least preferred one</text>
            </description>
            <type name="empty"/>
            <configd:help text="Treat missing route as a MED as the least preferred one"/>
          </leaf>
        </container>
        <leaf name="missing-as-worst">
          <description>
            <text>Treat missing route as a MED as the least preferred one</text>
          </description>
          <type name="empty"/>
          <configd:help text="Treat missing route as a MED as the least preferred one"/>
        </leaf>
      </container>
      <container name="as-path">
        <description>
          <text>AS-path attribute comparison parameters</text>
        </description>
        <presence value="Enables AS-path attribute comparison"/>
        <configd:help text="AS-path attribute comparison parameters"/>
        <leaf name="ignore">
          <description>
            <text>Ignore AS-path length in selecting a route</text>
          </description>
          <type name="empty"/>
          <configd:help text="Ignore AS-path length in selecting a route"/>
        </leaf>
        <leaf name="confed">
          <description>
            <text>Compare AS-path lengths including confederation sets &amp; sequences</text>
          </description>
          <type name="empty"/>
          <configd:help text="Compare AS-path lengths including confederation sets &amp; sequences"/>
        </leaf>
      </container>
      <leaf name="compare-routerid">
        <description>
          <text>Compare the router-id for identical eBGP paths</text>
        </description>
        <type name="empty"/>
        <configd:help text="Compare the router-id for identical eBGP paths"/>
      </leaf>
      <leaf name="igp-metric-ignore">
        <description>
          <text>Ignore IGP metric in BGP paths comparison</text>
        </description>
        <type name="empty"/>
        <configd:help text="Ignore IGP metric in BGP paths comparison"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-global-log-neighbor-changes">
    <leaf name="log-neighbor-changes">
      <description>
        <text>Log neighbor up/down changes and reset reason</text>
      </description>
      <type name="empty"/>
      <configd:help text="Log neighbor up/down changes and reset reason"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-no-fast-external-failover">
    <leaf name="no-fast-external-failover">
      <description>
        <text>Disable immediate session reset if peer's connected link goes down</text>
      </description>
      <type name="empty"/>
      <configd:help text="Disable immediate session reset if peer's connected link goes down"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-enforce-first-as">
    <leaf name="enforce-first-as">
      <description>
        <text>Require first AS in the path to match peer's AS</text>
      </description>
      <type name="empty"/>
      <configd:help text="Require first AS in the path to match peer's AS"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-scan-time">
    <leaf name="scan-time">
      <description>
        <text>BGP route scanner interval</text>
      </description>
      <type name="uint32">
        <range value="5..60"/>
      </type>
      <configd:help text="BGP route scanner interval"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-maximum-as-limit">
    <leaf name="maximum-as-limit">
      <description>
        <text>maximum-as-limit specifies maximum length of AS numbers in ASPATH or AS4PATH attribute</text>
      </description>
      <type name="uint8">
        <range value="1..254"/>
      </type>
      <configd:help text="BGP maximum-as-limit for update message"/>
      <default value="254"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-med-out-delay">
    <leaf name="med-out-delay">
      <description>
        <text>Max time to defer MED updates</text>
      </description>
      <type name="uint32">
        <range value="10..600"/>
      </type>
      <configd:help text="Max time to defer MED updates"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-no-client-to-client-reflection">
    <container name="no-client-to-client-reflection">
      <description>
        <text>Disable client to client route reflection</text>
      </description>
      <configd:help text="Disable client to client route reflection"/>
      <leaf name="all">
        <description>
          <text>Disable all client to client route reflection</text>
        </description>
        <type name="empty"/>
        <configd:help text="Disable all client to client route reflection"/>
      </leaf>
      <leaf-list name="cluster-id">
        <description>
          <text>Configure intra-cluster reflection</text>
        </description>
        <configd:help text="Configure intra-cluster reflection"/>
        <type name="union">
          <type name="types:ipv4-address"/>
          <type name="enumeration">
            <enum name="any"/>
            <configd:help text="Configure intra-cluster reflection for any cluster id"/>
          </type>
        </type>
        <must condition="(not(starts-with(current(), '127.')))">
          <error-message>
            <value>Invalid cluster-id (cannot configure a loopback address) </value>
          </error-message>
        </must>
        <must condition="(current() != '0.0.0.0')">
          <error-message>
            <value>Invalid cluster-id (value cannot be 0.0.0.0)</value>
          </error-message>
        </must>
      </leaf-list>
    </container>
  </grouping>
  <grouping name="bgp-params-global-deterministic-med">
    <leaf name="deterministic-med">
      <description>
        <text>Compare MEDs between different peers in the same AS</text>
      </description>
      <type name="empty"/>
      <configd:help text="Compare MEDs between different peers in the same AS"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-maximum-paths">
    <container name="maximum-paths">
      <description>
        <text>BGP multipaths</text>
      </description>
      <configd:help text="BGP multipaths"/>
      <leaf name="ibgp">
        <description>
          <text>Maximum iBGP multipaths</text>
        </description>
        <type name="uint32">
          <range value="2..64"/>
        </type>
        <configd:help text="Maximum iBGP multipaths"/>
      </leaf>
      <leaf name="ebgp">
        <description>
          <text>Maximum eBGP multipaths</text>
        </description>
        <type name="uint32">
          <range value="2..64"/>
        </type>
        <configd:help text="Maximum eBGP multipaths"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-global-router-id">
    <leaf name="router-id">
      <description>
        <text>BGP router id</text>
      </description>
      <type name="types:ipv4-address"/>
      <must condition="(not((substring-before(., '.') &gt;= 224) and (substring-before(string(current()), '.') &lt;= 239)))">
        <error-message>
          <value>Invalid router-id (cannot be a multicast address)</value>
        </error-message>
      </must>
      <must condition="(not((substring-before(., '.') &gt;= 240) and (substring-before(string(current()), '.') &lt;= 255)))">
        <error-message>
          <value>Invalid router-id</value>
        </error-message>
      </must>
      <must condition="(not(starts-with(current(), '127.')))">
        <error-message>
          <value>Invalid router-id (cannot configure a loopback address) </value>
        </error-message>
      </must>
      <must condition="(current() != '0.0.0.0')">
        <error-message>
          <value>Invalid router-id (value cannot be 0.0.0.0)</value>
        </error-message>
      </must>
      <configd:help text="BGP router id"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-timers">
    <container name="timers">
      <description>
        <text>BGP protocol timers</text>
      </description>
      <presence value="Enables BGP protocol timers"/>
      <configd:help text="BGP protocol timers"/>
      <must condition="((holdtime = 0) or ((holdtime != 0) and (holdtime &gt; keepalive)))">
        <error-message>
          <value>Hold time can be 0; or should be greater than keepalive time</value>
        </error-message>
      </must>
      <leaf name="holdtime">
        <description>
          <text>BGP holdtime interval</text>
        </description>
        <type name="uint32">
          <range value="0 | 3..65535"/>
        </type>
        <configd:help text="BGP holdtime interval"/>
        <default value="90"/>
      </leaf>
      <leaf name="keepalive">
        <description>
          <text>Keepalive interval</text>
        </description>
        <type name="uint32">
          <range value="0..65535"/>
        </type>
        <default value="30"/>
        <configd:help text="Keepalive interval"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-nexthop-rmap">
    <container name="nexthop">
      <description>
        <text>This container specifies route-map to be applied on nexthop.</text>
      </description>
      <presence value="Enables BGP nexthop"/>
      <configd:help text="BGP nexthop route-map filtering"/>
      <uses name="route-map-group">
        <refine target-node="route-map">
          <description>
            <text>This specifies route-map for bgp nexthop route filtering</text>
          </description>
          <configd:help text="Route-map to select bgp nexthop"/>
        </refine>
      </uses>
    </container>
  </grouping>
  <grouping name="peer-grp-neighbor-common-options">
    <uses name="neighbor-vrrp-failover"/>
    <uses name="neighbor-med-out"/>
    <uses name="neighbor-cluster-id"/>
    <leaf name="strict-capability-match">
      <description>
        <text>Enable strict capability negotiation</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable strict capability negotiation"/>
      <must condition="not(../override-capability)">
        <error-message>
          <value>You may not configure both strict-capability-match and override-capability</value>
        </error-message>
      </must>
    </leaf>
    <leaf name="password">
      <description>
        <text>BGP MD5 password</text>
      </description>
      <type name="string">
        <length value="1..80"/>
      </type>
      <configd:secret bool="true"/>
      <configd:help text="BGP MD5 password"/>
    </leaf>
    <leaf name="override-capability">
      <description>
        <text>Ignore capability negotiation with specified neighbor</text>
      </description>
      <type name="empty"/>
      <configd:help text="Ignore capability negotiation with specified neighbor"/>
    </leaf>
    <list name="local-as">
      <max-elements value="1"/>
      <description>
        <text>Local AS to allow customization of AS number</text>
      </description>
      <configd:help text="Local AS to allow customization of AS number"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <type name="uint32">
          <range value="1..max"/>
        </type>
      </leaf>
      <must condition="((tagnode &lt;= 65535) or (/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:extended-asn-capability))">
        <error-message>
          <value>Extended ASN Capability must be enabled for configuring ASN greater than 65535</value>
        </error-message>
      </must>
      <must condition="not(../remote-as = ../../tagnode)">
        <error-message>
          <value>You may not configure local-as for an iBGP neighbor/peer-group</value>
        </error-message>
      </must>
      <must condition="not(tagnode = ../../tagnode)">
        <error-message>
          <value>You may not configure local-as the same as the true local AS</value>
        </error-message>
      </must>
    </list>
    <leaf name="as-origination-interval">
      <description>
        <text>Minimum interval between AS origination routing updates</text>
      </description>
      <type name="uint32">
        <range value="1..65535"/>
      </type>
      <configd:help text="Minimum interval between AS origination routing updates"/>
    </leaf>
    <container name="ttl-security">
      <description>
        <text>Ttl security mechanism for this entity (neighbor or peer-group)</text>
      </description>
      <presence value="Enables TTL security"/>
      <configd:help text="Ttl security mechanism for this entity (neighbor or peer-group)"/>
      <leaf name="hops">
        <description>
          <text>Number of the maximum number of hops to the BGP peer</text>
        </description>
        <type name="uint32">
          <range value="1..254"/>
        </type>
        <configd:help text="Number of the maximum number of hops to the BGP peer"/>
      </leaf>
      <must condition="not(../remote-as = ../../tagnode)">
        <error-message>
          <value>You may not configure ttl-security for an iBGP neighbor/peer-group</value>
        </error-message>
      </must>
    </container>
    <container name="capability">
      <description>
        <text>Advertise capabilities to this entity (neighbor or peer-group)</text>
      </description>
      <presence value="Enables BGP capabilities"/>
      <configd:help text="Advertise capabilities to this entity (neighbor or peer-group)"/>
      <leaf name="dynamic">
        <description>
          <text>Advertise dynamic capability to this entity (neighbor or peer-group)</text>
        </description>
        <type name="empty"/>
        <configd:help text="Advertise dynamic capability to this entity (neighbor or peer-group)"/>
      </leaf>
      <leaf name="route-refresh">
        <description>
          <text>Enable route-refresh capability advertisement for this entity (neighbor or peer-group)</text>
        </description>
        <type name="empty"/>
        <configd:help text="Enable route-refresh capability advertisement for this entity (neighbor or peer-group)"/>
      </leaf>
    </container>
    <leaf name="disable-capability-negotiation">
      <description>
        <text>Disable capability negotiation with this entity (neighbor or peer-group)</text>
      </description>
      <type name="empty"/>
      <configd:help text="Disable capability negotiation with this entity (neighbor or peer-group)"/>
    </leaf>
    <leaf name="enforce-multihop">
      <description>
        <text>Enforce multihop for eBGP neighbors</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enforce multihop for eBGP neighbors"/>
      <must condition="not(../remote-as = ../../tagnode)">
        <error-message>
          <value>You may not configure enforce-multihop for an iBGP neighbor/peer-group</value>
        </error-message>
      </must>
    </leaf>
    <leaf name="description">
      <description>
        <text>Description for this entity (neighbor or peer-group)</text>
      </description>
      <type name="string">
        <length value="1..80"/>
      </type>
      <configd:help text="Description for this entity (neighbor or peer-group)"/>
    </leaf>
    <leaf name="update-source">
      <description>
        <text>Source address or interface of routing updates</text>
      </description>
      <type name="union">
        <type name="types:ipv4-address"/>
        <type name="types:ipv6-address"/>
        <type name="types:interface-ifname"/>
      </type>
      <configd:help text="Source address or interface of routing updates"/>
    </leaf>
    <leaf name="advertisement-interval">
      <description>
        <text>Minimum interval for sending routing updates</text>
      </description>
      <type name="uint32">
        <range value="0..65535"/>
      </type>
      <configd:help text="Minimum interval for sending routing updates"/>
    </leaf>
    <leaf name="passive">
      <description>
        <text>Do not initiate a session with this entity (neighbor or peer-group)</text>
      </description>
      <type name="empty"/>
      <configd:help text="Do not initiate a session with this entity (neighbor or peer-group)"/>
    </leaf>
    <leaf name="port">
      <description>
        <text>Neighbor's/Peer-group's BGP port</text>
      </description>
      <type name="uint32">
        <range value="1..65535"/>
      </type>
      <configd:help text="Neighbor's/Peer-group's BGP port"/>
    </leaf>
    <leaf name="shutdown">
      <description>
        <text>Administratively shut down neighbor</text>
      </description>
      <type name="empty"/>
      <configd:help text="Administratively shut down neighbor"/>
    </leaf>
    <container name="timers">
      <description>
        <text>Neighbor/Peer-group timers</text>
      </description>
      <presence value="Enables BGP timers"/>
      <configd:help text="Neighbor/Peer-group timers"/>
      <must condition="((holdtime = 0) or ((holdtime != 0) and (holdtime &gt; keepalive)))">
        <error-message>
          <value>Hold time can be 0; or should be greater than keepalive time</value>
        </error-message>
      </must>
      <leaf name="connect">
        <description>
          <text>BGP connect timer for this entity (neighbor or peer-group)</text>
        </description>
        <type name="uint32">
          <range value="1..65535"/>
        </type>
        <configd:help text="BGP connect timer for this entity (neighbor or peer-group)"/>
      </leaf>
      <leaf name="holdtime">
        <description>
          <text>BGP hold timer for this entity (neighbor or peer-group)</text>
        </description>
        <type name="uint32">
          <range value="0 | 3..65535"/>
        </type>
        <default value="90"/>
        <configd:help text="BGP hold timer for this entity (neighbor or peer-group)"/>
      </leaf>
      <leaf name="keepalive">
        <description>
          <text>BGP keepalive interval for this neighbor</text>
        </description>
        <type name="uint32">
          <range value="0..65535"/>
        </type>
        <default value="30"/>
        <configd:help text="BGP keepalive interval for this neighbor"/>
      </leaf>
    </container>
    <leaf name="ebgp-multihop">
      <description>
        <text>Allow this eBGP neighbor to not be on a directly connected network</text>
      </description>
      <type name="uint32">
        <range value="1..255"/>
      </type>
      <configd:help text="Allow this eBGP neighbor to not be on a directly connected network"/>
      <must condition="not(../remote-as = ../../tagnode)">
        <error-message>
          <value>You may not configure ebgp-multihop for an iBGP neighbor/peer-group</value>
        </error-message>
      </must>
      <must condition="not(../ttl-security)">
        <error-message>
          <value>You may not configure both ttl-security hops and ebgp-multihop</value>
        </error-message>
      </must>
    </leaf>
    <leaf name="remote-as">
      <description>
        <text>BGP AS number of neighbor or peer-group</text>
      </description>
      <type name="uint32">
        <range value="1..max"/>
      </type>
      <must condition="((current() &lt;=  65535) or (/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:extended-asn-capability))">
        <error-message>
          <value>Extended ASN Capability must be enabled for configuring ASN greater than 65535</value>
        </error-message>
      </must>
      <configd:help text="Entity (peer-group or neighbor) BGP AS number [REQUIRED]"/>
    </leaf>
  </grouping>
  <grouping name="peer-grp-neighbor-afi-common-settings">
    <uses name="neighbor-route-map"/>
    <container name="filter-list">
      <description>
        <text>As-path-list to filter route updates to/from this entity (peer-group or neighbor)</text>
      </description>
      <presence value="Enables applying as-path-list to filter route updates"/>
      <configd:help text="As-path-list to filter route updates to/from this entity (peer-group or neighbor)"/>
      <leaf name="export">
        <description>
          <text>As-path-list to filter outgoing route updates to this entity (peer-group or neighbor)</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:as-path-list/policy-route:tagnode"/>
        </type>
        <configd:help text="As-path-list to filter outgoing route updates to this entity (peer-group or neighbor)"/>
      </leaf>
      <leaf name="import">
        <description>
          <text>As-path-list to filter incoming route updates from this entity (peer-group or neighbor)</text>
        </description>
        <type name="leafref">
          <path value="/policy:policy/policy-route:route/policy-route:as-path-list/policy-route:tagnode"/>
        </type>
        <configd:help text="As-path-list to filter incoming route updates from this entity (peer-group or neighbor)"/>
      </leaf>
    </container>
    <container name="attribute-unchanged">
      <description>
        <text>BGP attributes are sent unchanged</text>
      </description>
      <configd:help text="BGP attributes are sent unchanged"/>
      <leaf name="next-hop">
        <description>
          <text>Send nexthop unchanged</text>
        </description>
        <type name="empty"/>
        <must condition="(../../../../ebgp-multihop)">
          <error-message>
            <value>Nexthop unchanged can be configured only on multihop eBGP peers</value>
          </error-message>
        </must>
        <configd:help text="Send nexthop unchanged"/>
      </leaf>
      <leaf name="med">
        <description>
          <text>Send multi-exit discriminator unchanged</text>
        </description>
        <type name="empty"/>
        <configd:help text="Send multi-exit discriminator unchanged"/>
      </leaf>
      <leaf name="as-path">
        <description>
          <text>Send AS path unchanged</text>
        </description>
        <type name="empty"/>
        <configd:help text="Send AS path unchanged"/>
      </leaf>
    </container>
    <leaf name="remove-private-as">
      <description>
        <text>Remove private AS numbers from AS path in outbound route updates</text>
      </description>
      <type name="empty"/>
      <configd:help text="Remove private AS numbers from AS path in outbound route updates"/>
      <must condition="not(../../../remote-as = ../../../../tagnode)">
        <error-message>
          <value>You may not configure remove-private-as for an iBGP neighbor/peer-group</value>
        </error-message>
      </must>
    </leaf>
    <leaf name="route-reflector-client">
      <description>
        <text>Peer-group as a route reflector client</text>
      </description>
      <type name="empty"/>
      <configd:help text="Peer-group as a route reflector client"/>
      <must condition="not(../../../remote-as) or (../../../remote-as) = (../../../../tagnode)">
        <error-message>
          <value>You may not configure route-reflector-client for an eBGP neighbor/peer-group</value>
        </error-message>
      </must>
    </leaf>
    <list name="maximum-prefix">
      <configd:priority priority="711"/>
      <description>
        <text>Maximum number of prefixes to accept from this entity (neighbor or peer-group)</text>
      </description>
      <max-elements value="1"/>
      <configd:help text="Maximum number of prefixes to accept from this entity (neighbor or peer-group)"/>
      <configd:end executable="/opt/vyatta/share/tmplscripts/protocols/bgp/peer-grp-neigh/address-family/maximum-prefix/configd_end.sh"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>Maximum number of prefixes to accept from this entity (neighbor or peer-group)</text>
        </description>
        <type name="uint32">
          <range value="1..max"/>
        </type>
        <configd:help text="Maximum number of prefixes to accept from this entity (neighbor or peer-group)"/>
      </leaf>
      <leaf name="warning-only">
        <description>
          <text>Only give warning message when limit is exceeded</text>
        </description>
        <type name="empty"/>
        <configd:help text="Only give warning message when limit is exceeded"/>
        <configd:validate executable="/opt/vyatta/share/tmplscripts/protocols/bgp/peer-grp-neigh/address-family/maximum-prefix/warning-only/configd_validate.cli"/>
      </leaf>
      <list name="threshold">
        <description>
          <text>Threshold value (percentage) at which to generate a warning msg</text>
        </description>
        <max-elements value="1"/>
        <configd:help text="Threshold value (percentage) at which to generate a warning msg"/>
        <key value="tagnode"/>
        <leaf name="tagnode">
          <description>
            <text>Threshold value (percentage) at which to generate a warning msg</text>
          </description>
          <type name="uint32">
            <range value="1..100"/>
          </type>
          <configd:help text="Threshold value (percentage) at which to generate a warning msg"/>
        </leaf>
        <leaf name="warning-only">
          <description>
            <text>Only give warning message when limit is exceeded</text>
          </description>
          <type name="empty"/>
          <configd:help text="Only give warning message when limit is exceeded"/>
        </leaf>
      </list>
    </list>
    <container name="allowas-in">
      <description>
        <text>Accept a route that contains the local-AS in the as-path</text>
      </description>
      <presence value="Enables allowas-in feature"/>
      <configd:help text="Accept a route that contains the local-AS in the as-path"/>
      <leaf name="number">
        <description>
          <text>Number of occurrences of AS number</text>
        </description>
        <type name="uint32">
          <range value="1..10"/>
        </type>
        <configd:help text="Number of occurrences of AS number"/>
      </leaf>
    </container>
    <leaf name="weight">
      <description>
        <text>Default weight for routes from this entity (neighbor or peer-group)</text>
      </description>
      <type name="uint32">
        <range value="1..65535"/>
      </type>
      <configd:help text="Default weight for routes from this entity (neighbor or peer-group)"/>
    </leaf>
    <container name="disable-send-community">
      <description>
        <text>Disable sending community attributes to this peer-group</text>
      </description>
      <configd:help text="Disable sending community attributes to this peer-group"/>
      <leaf name="extended">
        <description>
          <text>Disable sending extended community attributes to this entity (neighbor or peer-group)</text>
        </description>
        <type name="empty"/>
        <configd:help text="Disable sending extended community attributes to this entity (neighbor or peer-group)"/>
      </leaf>
      <leaf name="standard">
        <description>
          <text>Disable sending standard community attributes to this entity (neighbor or peer-group)</text>
        </description>
        <type name="empty"/>
        <configd:help text="Disable sending standard community attributes to this entity (neighbor or peer-group)"/>
      </leaf>
    </container>
    <container name="capability">
      <description>
        <text>Advertise capabilities to this entity (neighbor or peer-group)</text>
      </description>
      <presence value="Enables BGP neighbor/peer-group AFI capabilities"/>
      <configd:help text="Advertise capabilities to this entity (neighbor or peer-group)"/>
      <container name="graceful-restart">
        <description>
          <text>Advertise the graceful-restart capability to this entity (neighbor or peer-group)</text>
        </description>
        <presence value="Enables graceful-restart capability at neighbor/peer-group AFI level"/>
        <configd:help text="Advertise the graceful-restart capability to this entity (neighbor or peer-group)"/>
        <must condition="not(../../peer-group)">
          <error-message>
            <value>You can't set graceful-restart for a neighbor in a peer-group. You must set it in the peer-group.</value>
          </error-message>
        </must>
        <leaf name="disable">
          <description>
            <text>Disable the advertisement of the graceful-restart capability to this entity (neighbor or peer-group)</text>
          </description>
          <type name="empty"/>
          <configd:help text="Disable the advertisement of the graceful-restart capability to this entity (neighbor or peer-group)"/>
        </leaf>
      </container>
      <container name="orf">
        <description>
          <text>Advertise ORF capability to this neighbor</text>
        </description>
        <presence value="Enables ORF capability at neighbor/peer-group AFI level"/>
        <configd:help text="Advertise ORF capability to this neighbor"/>
        <container name="prefix-list">
          <description>
            <text>Advertise prefix-list ORF capability to this entity (neighbor or peer-group)</text>
          </description>
          <presence value="Enables advertising prefix-list ORF capability"/>
          <configd:help text="Advertise prefix-list ORF capability to this entity (neighbor or peer-group)"/>
          <leaf name="receive">
            <description>
              <text>Capability to receive the ORF</text>
            </description>
            <type name="empty"/>
            <configd:help text="Capability to receive the ORF"/>
          </leaf>
          <leaf name="send">
            <description>
              <text>Capability to send the ORF</text>
            </description>
            <type name="empty"/>
            <configd:help text="Capability to send the ORF"/>
          </leaf>
        </container>
      </container>
    </container>
    <container name="soft-reconfiguration">
      <description>
        <text>Soft reconfiguration for neighbor</text>
      </description>
      <configd:help text="Soft reconfiguration for neighbor"/>
      <leaf name="inbound">
        <description>
          <text>Inbound soft reconfiguration for this entity (neighbor or peer-group) [REQUIRED]</text>
        </description>
        <type name="empty"/>
        <configd:help text="Inbound soft reconfiguration for this entity (neighbor or peer-group) [REQUIRED]"/>
      </leaf>
    </container>
    <container name="default-originate">
      <description>
        <text>Send default route to this neighbor</text>
      </description>
      <presence value="Enables default-originate at neighbor/peer-group AFI level"/>
      <configd:help text="Send default route to this neighbor"/>
      <uses name="route-map-group">
        <refine target-node="route-map">
          <configd:help text="Route-map to specify criteria of the default"/>
        </refine>
      </uses>
    </container>
    <leaf name="unsuppress-map">
      <description>
        <text>Route-map to selectively unsuppress suppressed routes</text>
      </description>
      <type name="leafref">
        <path value="/policy:policy/policy-route:route/policy-route:route-map/policy-route:tagnode"/>
      </type>
      <configd:help text="Route-map to selectively unsuppress suppressed routes"/>
    </leaf>
    <leaf name="nexthop-self">
      <description>
        <text>Nexthop for routes sent to this peer-group to be the local router</text>
      </description>
      <type name="empty"/>
      <configd:help text="Nexthop for routes sent to this peer-group to be the local router"/>
    </leaf>
    <leaf name="route-server-client">
      <description>
        <text>Peer-group as route server client</text>
      </description>
      <type name="empty"/>
      <configd:help text="Peer-group as route server client"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-global-default-vrf">
    <container name="parameters">
      <description>
        <text>BGP Global parameters that can be configured under Default BGP Routing Instance</text>
      </description>
      <presence value="Enables BGP parameters"/>
      <configd:help text="BGP parameters"/>
      <uses name="bgp-params-global-ext-asn-cap"/>
      <uses name="bgp-params-global-no-rtm"/>
      <uses name="bgp-params-global-cluster-id"/>
      <uses name="bgp-params-global-always-compare-med"/>
      <uses name="bgp-params-global-default"/>
      <uses name="bgp-params-global-confederation"/>
      <uses name="bgp-params-global-graceful-restart"/>
      <uses name="bgp-params-global-bestpath"/>
      <uses name="bgp-params-global-log-neighbor-changes"/>
      <uses name="bgp-params-global-no-fast-external-failover"/>
      <uses name="bgp-params-global-enforce-first-as"/>
      <uses name="bgp-params-global-scan-time"/>
      <uses name="bgp-params-global-maximum-as-limit"/>
      <uses name="bgp-params-global-med-out-delay"/>
      <uses name="bgp-params-global-no-client-to-client-reflection"/>
      <uses name="bgp-params-global-deterministic-med"/>
      <uses name="bgp-params-global-maximum-paths"/>
      <uses name="bgp-params-global-router-id"/>
    </container>
    <uses name="bgp-params-timers"/>
  </grouping>
  <grouping name="bgp-params-peer-group">
    <list name="peer-group">
      <description>
        <text>BGP Peer-group parameters</text>
      </description>
      <configd:help text="BGP peer-group"/>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>BGP peer-group</text>
        </description>
        <type name="string"/>
        <configd:help text="BGP peer-group"/>
      </leaf>
      <uses name="peer-grp-neighbor-common-options">
        <refine target-node="local-as">
          <must condition="../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as != ../../tagnode">
            <error-message>
              <value>You may not configure local-as for a peer-group with iBGP member</value>
            </error-message>
          </must>
          <must condition="not(../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as = current())">
            <error-message>
              <value>You may not configure local-as the same as a member's remote-as</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="ttl-security">
          <must condition="../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as != ../../tagnode">
            <error-message>
              <value>You may not configure ttl-security for a peer-group with iBGP member</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="enforce-multihop">
          <must condition=" ../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as != ../../tagnode">
            <error-message>
              <value>You may not configure enforce-multihop for a peer-group with iBGP member</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="ebgp-multihop">
          <must condition="../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as != ../../tagnode">
            <error-message>
              <value>You may not configure ebgp-multihop for a peer-group with iBGP member</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="cluster-id">
          <must condition="not (../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as) or (../../neighbor[address-family/*/peer-group = current()/../tagnode]/remote-as = ../../tagnode)">
            <error-message>
              <value>You may not configure cluster-id for a peer-group with eBGP member</value>
            </error-message>
          </must>
        </refine>
      </uses>
      <container name="address-family">
        <description>
          <text>BGP peer-group address-family parameters</text>
        </description>
        <presence value="Enables BGP peer-group address-family"/>
        <configd:help text="BGP peer-group address-family parameters"/>
        <container name="ipv4-unicast">
          <description>
            <text>BGP peer-group IPv4 unicast parameters</text>
          </description>
          <presence value="Enables BGP peer-group IPv4 unicast parameters"/>
          <configd:help text="BGP peer-group IPv4 unicast parameters"/>
          <uses name="peer-grp-neighbor-afi-common-settings">
            <refine target-node="remove-private-as">
              <must condition="../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as  != ../../../../../bgp/tagnode">
                <error-message>
                  <value>You may not configure remove-private-as for a peer-group with iBGP member</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-reflector-client">
              <must condition="not (../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as) or (../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as  = ../../../../../bgp/tagnode)">
                <error-message>
                  <value>You may not configure route-reflector-client for a peer-group with eBGP member</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <uses name="neigh_peer_grp_ipv4_lists"/>
        </container>
        <container name="ipv6-unicast">
          <description>
            <text>BGP peer-group IPv6 unicast parameters</text>
          </description>
          <presence value="Enables BGP peer-group IPv6 unicast parameters"/>
          <configd:help text="BGP peer-group IPv6 unicast parameters"/>
          <uses name="peer-grp-neighbor-afi-common-settings">
            <refine target-node="remove-private-as">
              <must condition="../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as  != ../../../../../bgp/tagnode">
                <error-message>
                  <value>You may not configure remove-private-as for a peer-group with iBGP member</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-reflector-client">
              <must condition="not (../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as) or (../../../../neighbor[address-family/*/peer-group = current()/../../../tagnode]/remote-as  = ../../../../../bgp/tagnode)">
                <error-message>
                  <value>You may not configure route-reflector-client for a peer-group with eBGP member</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <uses name="neigh_peer_grp_ipv6_lists"/>
        </container>
      </container>
      <must condition="not((cluster-id or (address-family/*/route-reflector-client)) and    (ebgp-multihop or enforce-multihop or ttl-security or local-as or (address-family/*/remove-private-as)))">
        <error-message>
          <value>You may not configure both eBGP and iBGP type parameters</value>
        </error-message>
      </must>
    </list>
  </grouping>
  <grouping name="peer-address">
    <leaf name="tagnode">
      <type name="union">
        <type name="types:ipv4-address"/>
        <type name="types:ipv6-address"/>
      </type>
      <configd:help text="BGP neighbor"/>
      <must condition="not((starts-with(current(), 'fe8')) or (starts-with(current(), 'fe9')) or (starts-with(current(), 'fea')) or (starts-with(current(), 'feb'))) or (../update-source) or (../../peer-group[tagnode = current()/../address-family/*/peer-group]/update-source)">
        <error-message>
          <value>You must configure update-source for IPv6 link-local neighbors
</value>
        </error-message>
      </must>
      <must condition="not((starts-with(current(), 'fe8')) or (starts-with(current(), 'fe9')) or (starts-with(current(), 'fea')) or (starts-with(current(), 'feb'))) or (not(../ebgp-multihop) and  not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/ebgp-multihop))">
        <error-message>
          <value>You may not configure ebgp-multihop for IPv6 link-local neighbor
</value>
        </error-message>
      </must>
      <must condition="not((starts-with(current(), 'fe8')) or (starts-with(current(), 'fe9')) or (starts-with(current(), 'fea')) or (starts-with(current(), 'feb'))) or (not(../ttl-security) and  not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/ttl-security))">
        <error-message>
          <value>You may not configure ttl-security for IPv6 link-local neighbor
</value>
        </error-message>
      </must>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-all">
    <leaf name="all">
      <description>
        <text>Enable all BGP logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable all BGP logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-events">
    <leaf name="events">
      <description>
        <text>Enable BGP events logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP events logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-filters">
    <leaf name="filters">
      <description>
        <text>Enable BGP filters logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP filters logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-fsm">
    <leaf name="fsm">
      <description>
        <text>Enable BGP fsm logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP fsm logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-nsm">
    <leaf name="nsm">
      <description>
        <text>Enable BGP nsm logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP nsm logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-keepalive">
    <leaf name="keepalive">
      <description>
        <text>Enable BGP keepalive logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP keepalive logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-update">
    <container name="update">
      <description>
        <text>BGP update logs</text>
      </description>
      <configd:help text="BGP update logs"/>
      <leaf name="in">
        <description>
          <text>Enable BGP update in logs</text>
        </description>
        <type name="empty"/>
        <configd:help text="Enable BGP update in logs"/>
      </leaf>
      <leaf name="out">
        <description>
          <text>Enable BGP update out logs</text>
        </description>
        <type name="empty"/>
        <configd:help text="Enable BGP update out logs"/>
      </leaf>
      <leaf name="all">
        <description>
          <text>Enable BGP update all logs</text>
        </description>
        <type name="empty"/>
        <configd:help text="Enable BGP update all logs"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-params-log-bfd">
    <leaf name="bfd">
      <description>
        <text>Enable BGP BFD logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP BFD logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-dampening">
    <leaf name="dampening">
      <description>
        <text>Enable BGP dampening logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP dampening logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-msdp">
    <leaf name="msdp">
      <description>
        <text>Enable BGP msdp logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP msdp logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log-rib">
    <leaf name="rib">
      <description>
        <text>Enable BGP rib logs</text>
      </description>
      <type name="empty"/>
      <configd:help text="Enable BGP rib logs"/>
    </leaf>
  </grouping>
  <grouping name="bgp-params-log">
    <container name="log">
      <description>
        <text>BGP logging configuration parameters</text>
      </description>
      <configd:help text="BGP logging parameters"/>
      <uses name="bgp-params-log-all"/>
      <uses name="bgp-params-log-events"/>
      <uses name="bgp-params-log-filters"/>
      <uses name="bgp-params-log-fsm"/>
      <uses name="bgp-params-log-nsm"/>
      <uses name="bgp-params-log-keepalive"/>
      <uses name="bgp-params-log-update"/>
      <uses name="bgp-params-log-bfd"/>
      <uses name="bgp-params-log-dampening"/>
      <uses name="bgp-params-log-msdp"/>
      <uses name="bgp-params-log-rib"/>
    </container>
  </grouping>
  <grouping name="bgp-params-neighbor-log">
    <container name="log">
      <description>
        <text>BGP logging configuration parameters</text>
      </description>
      <configd:help text="BGP logging parameters"/>
      <uses name="bgp-params-log-all"/>
      <uses name="bgp-params-log-events"/>
      <uses name="bgp-params-log-filters"/>
      <uses name="bgp-params-log-fsm"/>
      <uses name="bgp-params-log-keepalive"/>
      <uses name="bgp-params-log-update"/>
      <uses name="bgp-params-log-bfd"/>
      <uses name="bgp-params-log-dampening"/>
      <uses name="bgp-params-log-msdp"/>
    </container>
  </grouping>
  <grouping name="bgp-params-neighbor">
    <list name="neighbor">
      <description>
        <text>BGP neighbor level configuration parameters</text>
      </description>
      <configd:help text="BGP neighbor"/>
      <key value="tagnode"/>
      <uses name="peer-address"/>
      <uses name="peer-grp-neighbor-common-options">
        <refine target-node="strict-capability-match">
          <must condition="not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/override-capability)">
            <error-message>
              <value>You may not configure strict-capability-match when override-capability is set in peer-group</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="override-capability">
          <must condition="not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/strict-capability-match)">
            <error-message>
              <value>You may not configure override-capability when strict-capability-match is set in peer-group</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="local-as">
          <must condition="not(../address-family/*/peer-group)">
            <error-message>
              <value>You may not configure local-as for a neighbor in peer-group
</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="as-origination-interval">
          <must condition="not(../address-family/*/peer-group)">
            <error-message>
              <value>You may not configure as-origination-interval for a neighbor in peer-group
</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="ttl-security">
          <must condition="not(../address-family/*/peer-group) or (../../peer-group[tagnode = current()/../address-family/*/peer-group]/remote-as != ../../tagnode)">
            <error-message>
              <value>You may not configure ttl-security for a neighbor in iBGP peer-group</value>
            </error-message>
          </must>
          <must condition="not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/ebgp-multihop) or ((../../peer-group[tagnode = current()/../address-family/*/peer-group]/ebgp-multihop) = 1)">
            <error-message>
              <value>You may not configure ttl-security hop when ebgp-multihop is set in peer-group</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="enforce-multihop">
          <must condition="not(../address-family/*/peer-group) or (../../peer-group[tagnode = current()/../address-family/*/peer-group]/remote-as != ../../tagnode)">
            <error-message>
              <value>You may not configure enforce-multihop for a neighbor in an iBGP peer-group</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="port">
          <must condition="not(../address-family/*/peer-group)">
            <error-message>
              <value>You may not configure port for a neighbor in peer-group
</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="timers">
          <must condition="not(../address-family/*/peer-group)">
            <error-message>
              <value>You may not configure timer for a neighbor in peer-group
</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="ebgp-multihop">
          <must condition="(../../peer-group[tagnode = current()/../address-family/*/peer-group]/remote-as != ../../tagnode)">
            <error-message>
              <value>You may not configure ebgp-multihop for a neighbor in an iBGP peer-group</value>
            </error-message>
          </must>
          <must condition="not(../../peer-group[tagnode = current()/../address-family/*/peer-group]/ttl-security)">
            <error-message>
              <value>You may not configure ebgp-multihop when ttl-security hop is set in peer-group</value>
            </error-message>
          </must>
        </refine>
        <refine target-node="remote-as">
          <must condition="not(current()/../address-family/*/peer-group) or (   ((current() = ../../tagnode) and not(../../neighbor[address-family/*/peer-group = current()/../address-family/*/peer-group]/remote-as != ../../tagnode)) or ((current() != ../../tagnode) and not(../../neighbor[address-family/*/peer-group = current()/../address-family/*/peer-group]/remote-as = ../../tagnode)))">
            <error-message>
              <value>All members of a peer-group must be either iBGP or eBGP</value>
            </error-message>
          </must>
        </refine>
      </uses>
      <must condition="(not(address-family) or remote-as or (../peer-group[tagnode = current()/address-family/*/peer-group]/remote-as))">
        <error-message>
          <value>remote-as must be configured either in neighbor or in peer-group</value>
        </error-message>
      </must>
      <must condition="not(remote-as and (../peer-group[tagnode = current()/address-family/*/peer-group]/remote-as))">
        <error-message>
          <value>You may not configure remote-as both in neighbor and peer-group</value>
        </error-message>
      </must>
      <uses name="bgp-params-neighbor-log"/>
      <uses name="neighbor-route-map">
        <refine target-node="route-map/export">
          <must condition="not(../../address-family/*/peer-group)">
            <error-message>
              <value>You may not configure global route-map export for a neighbor in peer-group
</value>
            </error-message>
          </must>
        </refine>
      </uses>
      <container name="address-family">
        <description>
          <text>Parameters relating to IPv4 or IPv6 routes</text>
        </description>
        <presence value="Enables BGP neighbor address-family"/>
        <configd:help text="Parameters relating to IPv4 or IPv6 routes"/>
        <container name="ipv4-unicast">
          <description>
            <text>BGP neighbor parameters</text>
          </description>
          <presence value="Enables BGP neighbor IPv4 parameters"/>
          <configd:help text="BGP neighbor parameters"/>
          <uses name="peer-grp-neighbor-afi-common-settings">
            <refine target-node="filter-list/export">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure filter-list export for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-map/export">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure route-map export for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="attribute-unchanged">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure attribute-unchanged for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="remove-private-as">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure remove-private-as for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-reflector-client">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure route-reflector-client for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="disable-send-community">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure disable-send-community for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="capability/orf">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure capability orf for a neighbor in peer-group</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="default-originate">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure default-originate for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="unsuppress-map">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure unsuppress-map for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="nexthop-self">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure nexthop-self for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-server-client">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure route-server-client for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <uses name="neigh_peer_grp_ipv4_lists">
            <refine target-node="distribute-list">
              <must condition="not(../../../../peer-group[tagnode = current()/../peer-group]/address-family/ipv4-unicast/prefix-list)">
                <error-message>
                  <value>You may not configure distribute-list when prefix-list is set in peer-group</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="prefix-list">
              <must condition="not(../../../../peer-group[tagnode = current()/../peer-group]/address-family/ipv4-unicast/distribute-list)">
                <error-message>
                  <value>You may not configure prefix-list when distribute-list is set in peer-group</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <leaf name="peer-group">
            <description>
              <text>IPv4 peer group for this peer</text>
            </description>
            <type name="leafref">
              <path value="../../../../peer-group/tagnode"/>
            </type>
            <configd:help text="IPv4 peer group for this peer"/>
            <must condition="../../../../peer-group[tagnode=current()]/address-family/ipv4-unicast">
              <error-message>
                <value>You must configure address-family ipv4-unicast in peer-group</value>
              </error-message>
            </must>
            <configd:validate executable="/opt/vyatta/share/tmplscripts/protocols/bgp/neighbor/address-family/peer-group/configd_update.cli"/>
          </leaf>
        </container>
        <container name="ipv6-unicast">
          <description>
            <text>BGP neighbor parameters</text>
          </description>
          <presence value="Enables BGP neighbor IPv6 parameters"/>
          <configd:help text="BGP neighbor parameters"/>
          <uses name="peer-grp-neighbor-afi-common-settings">
            <refine target-node="filter-list/export">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure filter-list export for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-map/export">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure route-map export for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="attribute-unchanged">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure attribute-unchanged for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="remove-private-as">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure remove-private-as for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-reflector-client">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure route-reflector-client for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="disable-send-community">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure disable-send-community for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="capability/orf">
              <must condition="not(../../peer-group)">
                <error-message>
                  <value>You may not configure capability orf for a neighbor in peer-group</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="default-originate">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure default-originate for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="unsuppress-map">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure unsuppress-map for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="nexthop-self">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure nexthop-self for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="route-server-client">
              <must condition="not(../peer-group)">
                <error-message>
                  <value>You may not configure route-server-client for a neighbor in peer-group
</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <uses name="neigh_peer_grp_ipv6_lists">
            <refine target-node="distribute-list">
              <must condition="not(../../../../peer-group[tagnode = current()/../peer-group]/address-family/ipv6-unicast/prefix-list)">
                <error-message>
                  <value>You may not configure distribute-list when prefix-list is set in peer-group</value>
                </error-message>
              </must>
            </refine>
            <refine target-node="prefix-list">
              <must condition="not(../../../../peer-group[tagnode = current()/../peer-group]/address-family/ipv6-unicast/distribute-list)">
                <error-message>
                  <value>You may not configure distribute-list when distribute-list is set in peer-group</value>
                </error-message>
              </must>
            </refine>
          </uses>
          <leaf name="peer-group">
            <description>
              <text>IPv6 peer group for this peer</text>
            </description>
            <type name="leafref">
              <path value="../../../../peer-group/tagnode"/>
            </type>
            <must condition="../../../../peer-group[tagnode=current()]/address-family/ipv6-unicast">
              <error-message>
                <value>Please set address-family ipv6-unicast in peer-group</value>
              </error-message>
            </must>
            <configd:help text="IPv6 peer group for this peer"/>
          </leaf>
        </container>
      </container>
    </list>
  </grouping>
  <grouping name="bgp-params-address-family">
    <container name="address-family">
      <description>
        <text>BGP address-level configuration parameters</text>
      </description>
      <presence value="Enables BGP address-family parameter"/>
      <configd:help text="BGP address-family parameters"/>
      <container name="ipv4-unicast">
        <description>
          <text>BGP IPv4 settings</text>
        </description>
        <presence value="Enables BGP IPv4 settings"/>
        <configd:help text="BGP IPv4 settings"/>
        <container name="parameters">
          <description>
            <text>BGP parameters for the ipv4-unicast address family</text>
          </description>
          <presence value="Enables BGP parameters for the ipv4-unicast address family"/>
          <configd:help text="BGP parameters for the ipv4-unicast address family"/>
          <leaf name="synchronization">
            <description>
              <text>Enable BGP synchronization for the ipv4-unicast address family</text>
            </description>
            <type name="empty"/>
            <configd:help text="Enable BGP synchronization for the ipv4-unicast address family"/>
          </leaf>
          <leaf name="network-synchronization">
            <description>
              <text>Enable BGP network synchronization for the ipv4-unicast address family</text>
            </description>
            <type name="empty"/>
            <configd:help text="Enable BGP network synchronization for the ipv4-unicast address family"/>
          </leaf>
          <uses name="parameters-distance"/>
          <uses name="parameters-dampening"/>
        </container>
        <uses name="ipv4-aggregate-address"/>
        <uses name="network-ipv4"/>
        <uses name="redistribute-ipv4"/>
        <leaf name="auto-summary">
          <description>
            <text>Enable automatic network number summarization</text>
          </description>
          <type name="empty"/>
          <configd:help text="Enable automatic network number summarization"/>
        </leaf>
        <uses name="bgp-nexthop-rmap"/>
      </container>
      <container name="ipv6-unicast">
        <description>
          <text>Enable BGP IPv6 settings</text>
        </description>
        <presence value="Enables BGP IPv6 settings"/>
        <configd:help text="BGP IPv6 settings"/>
        <container name="parameters">
          <description>
            <text>BGP parameters for the ipv6-unicast address family</text>
          </description>
          <presence value="Enables BGP parameters for the ipv6-unicast address family"/>
          <configd:help text="BGP parameters for the ipv6-unicast address family"/>
          <leaf name="synchronization">
            <description>
              <text>Enable BGP synchronization for the ipv6-unicast address family</text>
            </description>
            <type name="empty"/>
            <configd:help text="Enable BGP synchronization for the ipv6-unicast address family"/>
          </leaf>
          <leaf name="network-synchronization">
            <description>
              <text>Enable BGP network synchronization for the ipv6-unicast address family</text>
            </description>
            <type name="empty"/>
            <configd:help text="Enable BGP network synchronization for the ipv6-unicast address family"/>
          </leaf>
          <uses name="parameters-distance"/>
          <uses name="parameters-dampening"/>
        </container>
        <uses name="ipv6-aggregate-address"/>
        <uses name="network-ipv6"/>
        <uses name="redistribute-ipv6"/>
        <leaf name="auto-summary">
          <description>
            <text>Enable automatic network number summarization</text>
          </description>
          <type name="empty"/>
          <configd:help text="Enable automatic network number summarization"/>
        </leaf>
        <uses name="bgp-nexthop-rmap"/>
      </container>
    </container>
  </grouping>
  <grouping name="bgp-protocol">
    <list name="bgp">
      <configd:priority priority="710"/>
      <description>
        <text>BGP configuration parameters</text>
      </description>
      <configd:help text="Border Gateway Protocol (BGP) parameters"/>
      <configd:end executable="/opt/vyatta/share/tmplscripts/protocols/bgp/configd_end.sh"/>
      <must condition="(tagnode != 23456)">
        <error-message>
          <value>Invalid AS Number, 23456 (Reserved)</value>
        </error-message>
      </must>
      <must condition="((tagnode &lt;=  65535) or (/protocols:protocols/vyatta-protocols-bgp-v1:bgp/vyatta-protocols-bgp-v1:parameters/vyatta-protocols-bgp-v1:extended-asn-capability))">
        <error-message>
          <value>Extended ASN Capability must be enabled for configuring ASN greater than 65535</value>
        </error-message>
      </must>
      <must condition="count(../bgp/tagnode) &lt;= 1">
        <error-message>
          <value>Another BGP instance is already running</value>
        </error-message>
      </must>
      <key value="tagnode"/>
      <leaf name="tagnode">
        <description>
          <text>BGP AS Number</text>
        </description>
        <type name="uint32">
          <range value="1..max"/>
        </type>
        <configd:help text="Border Gateway Protocol (BGP) parameters"/>
      </leaf>
      <uses name="bgp-params-global-default-vrf"/>
      <uses name="bgp-params-peer-group"/>
      <uses name="bgp-params-neighbor">
        <refine target-node="neighbor">
          <configd:validate executable="/opt/vyatta/share/tmplscripts/protocols/bgp/neighbor/configd_validate.sh"/>
        </refine>
      </uses>
      <uses name="bgp-params-address-family"/>
      <uses name="bgp-params-log"/>
    </list>
  </grouping>
  <augment target-node="/protocols:protocols">
    <uses name="bgp-protocol"/>
  </augment>
  <augment target-node="/service:service/service-snmp:snmp/service-snmp:notification">
    <container name="bgp">
      <description>
        <text>BGP Notifications</text>
      </description>
      <configd:help text="BGP Notifications"/>
      <leaf name="all">
        <description>
          <text>Enable BGP Notifications</text>
        </description>
        <type name="empty"/>
        <configd:help text="BGP Notifications"/>
        <configd:create executable='vtysh -c "configure terminal" -c "bgp notification all"'/>
        <configd:delete executable='vtysh -c "configure terminal" -c "no bgp notification"'/>
      </leaf>
    </container>
  </augment>
</module>
